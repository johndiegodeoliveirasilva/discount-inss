version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - inss-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5
    env_file:
      - .env

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - inss-network
    volumes:
      - redis:/data

  sidekiq:
    container_name: sidekiq
    build: .
    command: bundle exec sidekiq -C config/sidekiq.yml
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    working_dir: /var/www/app
    volumes:
      - .:/var/www/app
    env_file:
      - .env
    networks:
      - inss-network

  web:
    stdin_open: true
    tty: true
    container_name: discount-inss
    build: .
    command: >
      bash -c "rm -f tmp/pids/server.pid &&
      bundle exec rake db:create &&
      bundle exec rake db:migrate &&
      bundle exec rails s -p 3001 -b '0.0.0.0'"
    volumes:
      - .:/var/www/app
    ports:
      - "3001:3001"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env
    networks:
      - inss-network

networks:
  inss-network:

volumes:
  postgres:
  redis:
